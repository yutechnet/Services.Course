// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.17929
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BpeProducts.Services.Course.Host.Tests.Integration
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CourseLearningActivity")]
    [NUnit.Framework.CategoryAttribute("Api")]
    public partial class CourseLearningActivityFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CourseLearningActivity.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CourseLearningActivity", "As a course creator\r\nI would like to specify grading attributes to learning activ" +
                    "ities\r\nSo that I can turn them into gradebook items", ProgrammingLanguage.CSharp, new string[] {
                        "Api"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Code",
                        "Description",
                        "OrganizationId",
                        "CourseType",
                        "IsTemplate",
                        "IsPublished"});
            table1.AddRow(new string[] {
                        "Econ 100",
                        "E100",
                        "Macroeconomics",
                        "E2DF063D-E2A1-4F83-9BE0-218EC676C05F",
                        "Traditional",
                        "False",
                        "NotPublished"});
#line 8
testRunner.Given("the following courses and their published status:", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table2.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
#line 11
testRunner.Given("I add following course segments to \'Econ 100\':", ((string)(null)), table2, "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add a learning activity")]
        public virtual void AddALearningActivity()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add a learning activity", ((string[])(null)));
#line 15
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "TenantId",
                        "Name",
                        "Type",
                        "IsGradeable",
                        "IsExtraCredit",
                        "Weight",
                        "MaxPoint",
                        "ObjectId"});
            table3.AddRow(new string[] {
                        "999999",
                        "Assignment 1",
                        "Assignment",
                        "True",
                        "False",
                        "50",
                        "20",
                        "D2DF063D-E2A1-4F83-9BE0-218EC676C05F"});
            table3.AddRow(new string[] {
                        "999999",
                        "Assignment 2",
                        "Assignment",
                        "True",
                        "False",
                        "50",
                        "20",
                        "D2DF063D-E2A1-4F83-9BE0-218EC676C05F"});
#line 16
 testRunner.When("I add the following learning activity:", ((string)(null)), table3, "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "TenantId",
                        "Name",
                        "Type",
                        "IsGradeable",
                        "IsExtraCredit",
                        "Weight",
                        "MaxPoint",
                        "ObjectId"});
            table4.AddRow(new string[] {
                        "999999",
                        "Assignment 1",
                        "Assignment",
                        "True",
                        "False",
                        "50",
                        "20",
                        "D2DF063D-E2A1-4F83-9BE0-218EC676C05F"});
            table4.AddRow(new string[] {
                        "999999",
                        "Assignment 2",
                        "Assignment",
                        "True",
                        "False",
                        "50",
                        "20",
                        "D2DF063D-E2A1-4F83-9BE0-218EC676C05F"});
#line 20
 testRunner.Then("my learning activity contains the following:", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Update a learning activity NEW")]
        public virtual void UpdateALearningActivityNEW()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update a learning activity NEW", ((string[])(null)));
#line 25
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "TenantId",
                        "999999"});
            table5.AddRow(new string[] {
                        "Name",
                        "Discussion 1"});
            table5.AddRow(new string[] {
                        "Type",
                        "Discussion"});
            table5.AddRow(new string[] {
                        "IsGradeable",
                        "true"});
            table5.AddRow(new string[] {
                        "IsExtraCredit",
                        "true"});
            table5.AddRow(new string[] {
                        "Weight",
                        "100"});
            table5.AddRow(new string[] {
                        "MaxPoint",
                        "20"});
            table5.AddRow(new string[] {
                        "ObjectId",
                        "D2DF063D-E2A1-4F83-9BE0-218EC676C05F"});
#line 26
 testRunner.Given("the following learning activity:", ((string)(null)), table5, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table6.AddRow(new string[] {
                        "TenantId",
                        "999999"});
            table6.AddRow(new string[] {
                        "Name",
                        "Discussion 1"});
            table6.AddRow(new string[] {
                        "Type",
                        "Assignment"});
            table6.AddRow(new string[] {
                        "IsGradeable",
                        "false"});
            table6.AddRow(new string[] {
                        "IsExtraCredit",
                        "false"});
            table6.AddRow(new string[] {
                        "Weight",
                        "100"});
            table6.AddRow(new string[] {
                        "MaxPoint",
                        "100"});
            table6.AddRow(new string[] {
                        "ObjectId",
                        "D2DF063D-E2A1-4F83-9BE0-218EC676C05F"});
#line 36
 testRunner.When("I update \'Discussion 1\' learning activity with the following info", ((string)(null)), table6, "When ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table7.AddRow(new string[] {
                        "TenantId",
                        "999999"});
            table7.AddRow(new string[] {
                        "Name",
                        "Discussion 1"});
            table7.AddRow(new string[] {
                        "Type",
                        "Assignment"});
            table7.AddRow(new string[] {
                        "IsGradeable",
                        "false"});
            table7.AddRow(new string[] {
                        "IsExtraCredit",
                        "false"});
            table7.AddRow(new string[] {
                        "Weight",
                        "100"});
            table7.AddRow(new string[] {
                        "MaxPoint",
                        "100"});
            table7.AddRow(new string[] {
                        "ObjectId",
                        "D2DF063D-E2A1-4F83-9BE0-218EC676C05F"});
#line 46
 testRunner.Then("the learning activity \'Discussion 1\' should have the following info", ((string)(null)), table7, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Delete a learning activity")]
        public virtual void DeleteALearningActivity()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Delete a learning activity", ((string[])(null)));
#line 57
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "TenantId",
                        "999999"});
            table8.AddRow(new string[] {
                        "Name",
                        "Discussion 1"});
            table8.AddRow(new string[] {
                        "Type",
                        "Discussion"});
            table8.AddRow(new string[] {
                        "IsGradeable",
                        "true"});
            table8.AddRow(new string[] {
                        "IsExtraCredit",
                        "true"});
            table8.AddRow(new string[] {
                        "Weight",
                        "100"});
            table8.AddRow(new string[] {
                        "MaxPoint",
                        "20"});
            table8.AddRow(new string[] {
                        "ObjectId",
                        "D2DF063D-E2A1-4F83-9BE0-218EC676C05F"});
#line 58
 testRunner.Given("the following learning activity:", ((string)(null)), table8, "Given ");
#line 68
 testRunner.When("I remove \"Discussion 1\" learning activity", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 69
 testRunner.Then("I get \'NotFound\' response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cannot add a learning activity to a course that is already published")]
        public virtual void CannotAddALearningActivityToACourseThatIsAlreadyPublished()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cannot add a learning activity to a course that is already published", ((string[])(null)));
#line 71
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table9.AddRow(new string[] {
                        "PublishNote",
                        "Blah blah"});
#line 72
 testRunner.Given("I publish \'Econ 100\' course with the following info", ((string)(null)), table9, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table10.AddRow(new string[] {
                        "TenantId",
                        "999999"});
            table10.AddRow(new string[] {
                        "Name",
                        "Discussion 1"});
            table10.AddRow(new string[] {
                        "Type",
                        "Discussion"});
            table10.AddRow(new string[] {
                        "IsGradeable",
                        "true"});
            table10.AddRow(new string[] {
                        "IsExtraCredit",
                        "true"});
            table10.AddRow(new string[] {
                        "Weight",
                        "100"});
            table10.AddRow(new string[] {
                        "MaxPoint",
                        "20"});
            table10.AddRow(new string[] {
                        "ObjectId",
                        "Null"});
#line 75
 testRunner.When("I add a learning activity to a course that has already been published", ((string)(null)), table10, "When ");
#line 85
 testRunner.Then("I get \'Forbidden\' response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
