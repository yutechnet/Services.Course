// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18010
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BpeProducts.Services.Course.Host.Tests.Integration
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CourseTemplate")]
    [NUnit.Framework.CategoryAttribute("Api")]
    public partial class CourseTemplateFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CourseTemplate.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CourseTemplate", "In order to create courses easily and quickly\r\nAs a course builder\r\nI want to cre" +
                    "ate courses from a template", ProgrammingLanguage.CSharp, new string[] {
                        "Api"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table1.AddRow(new string[] {
                        "COB"});
#line 8
 testRunner.And("the following organizations exist", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Capability"});
            table2.AddRow(new string[] {
                        "CourseCreate"});
            table2.AddRow(new string[] {
                        "CoursePublish"});
            table2.AddRow(new string[] {
                        "CourseView"});
            table2.AddRow(new string[] {
                        "EditProgram"});
            table2.AddRow(new string[] {
                        "ViewProgram"});
            table2.AddRow(new string[] {
                        "EditCourse"});
#line 11
 testRunner.And("I have the following capabilities", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table3.AddRow(new string[] {
                        "asset1"});
            table3.AddRow(new string[] {
                        "asset2"});
            table3.AddRow(new string[] {
                        "asset3"});
#line 19
 testRunner.And("I have the following assets", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "PublishNote"});
            table4.AddRow(new string[] {
                        "asset1",
                        "published"});
            table4.AddRow(new string[] {
                        "asset2",
                        "published"});
            table4.AddRow(new string[] {
                        "asset3",
                        "published"});
#line 24
 testRunner.And("Published the following assets", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "ProgramType",
                        "OrganizationName"});
            table5.AddRow(new string[] {
                        "Bachelor of Art",
                        "BA Program",
                        "BA",
                        "COB"});
            table5.AddRow(new string[] {
                        "Bachelor of Science",
                        "BS program",
                        "BS",
                        "COB"});
#line 29
 testRunner.And("I have the following programs", ((string)(null)), table5, "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Code",
                        "Description",
                        "OrganizationName",
                        "CourseType",
                        "IsTemplate",
                        "MetaData",
                        "ExtensionAssets",
                        "CorrelationId"});
            table6.AddRow(new string[] {
                        "Template 1",
                        "TemplateCode1",
                        "My First Course Template",
                        "COB",
                        "Traditional",
                        "true",
                        "{someData}",
                        "asset1,asset2",
                        "correlationId1"});
#line 33
 testRunner.And("I have the following course templates", ((string)(null)), table6, "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table7.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table7.AddRow(new string[] {
                        "Discussion",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1"});
            table7.AddRow(new string[] {
                        "Discussion2",
                        "Discussion2 for the first week",
                        "Discussion",
                        "Week1"});
            table7.AddRow(new string[] {
                        "Topic",
                        "Topic for a discussion",
                        "Topic",
                        "Discussion"});
#line 36
 testRunner.And("I have the following course segments for \'Template 1\'", ((string)(null)), table7, "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create a course from a template")]
        public virtual void CreateACourseFromATemplate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create a course from a template", ((string[])(null)));
#line 44
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Code",
                        "Description",
                        "OrganizationName",
                        "IsTemplate"});
            table8.AddRow(new string[] {
                        "Course 1",
                        "CourseCode1",
                        "My First Course",
                        "COB",
                        "false"});
#line 45
testRunner.When("I create a course from the template \'Template 1\' with the following", ((string)(null)), table8, "When ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Code",
                        "Description",
                        "OrganizationName",
                        "IsTemplate",
                        "CorrelationId"});
            table9.AddRow(new string[] {
                        "Course 2",
                        "",
                        "My Second Course",
                        "COB",
                        "true",
                        "correlationId2"});
#line 48
testRunner.And("I create a course from the template \'Template 1\' with the following", ((string)(null)), table9, "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Code",
                        "Description",
                        "OrganizationName",
                        "IsTemplate"});
            table10.AddRow(new string[] {
                        "Course 3",
                        "",
                        "",
                        "COB",
                        "true"});
#line 51
testRunner.And("I create a course from the template \'Template 1\' with the following", ((string)(null)), table10, "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table11.AddRow(new string[] {
                        "Name",
                        "Course 1"});
            table11.AddRow(new string[] {
                        "Code",
                        "CourseCode1"});
            table11.AddRow(new string[] {
                        "Description",
                        "My First Course"});
            table11.AddRow(new string[] {
                        "CourseType",
                        "Traditional"});
            table11.AddRow(new string[] {
                        "IsTemplate",
                        "false"});
            table11.AddRow(new string[] {
                        "MetaData",
                        "{someData}"});
            table11.AddRow(new string[] {
                        "CorrelationId",
                        ""});
#line 54
testRunner.Then("the course \'Course 1\' should have the following info", ((string)(null)), table11, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "ExtensionAssets",
                        "asset1,asset2"});
#line 63
testRunner.And("the course \'Course 1\' should have the following reference info", ((string)(null)), table12, "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "SourceSegment"});
            table13.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        "Week1"});
#line 66
testRunner.And("the course \'Course 1\' should have the following segment info", ((string)(null)), table13, "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table14.AddRow(new string[] {
                        "Name",
                        "Course 2"});
            table14.AddRow(new string[] {
                        "Code",
                        "TemplateCode1"});
            table14.AddRow(new string[] {
                        "Description",
                        "My Second Course"});
            table14.AddRow(new string[] {
                        "CourseType",
                        "Traditional"});
            table14.AddRow(new string[] {
                        "IsTemplate",
                        "true"});
            table14.AddRow(new string[] {
                        "MetaData",
                        "{someData}"});
            table14.AddRow(new string[] {
                        "CorrelationId",
                        "correlationId2"});
#line 69
testRunner.And("the course \'Course 2\' should have the following info", ((string)(null)), table14, "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table15.AddRow(new string[] {
                        "ExtensionAssets",
                        "asset1,asset2"});
#line 78
testRunner.And("the course \'Course 2\' should have the following reference info", ((string)(null)), table15, "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "SourceSegment"});
            table16.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        "Week1"});
#line 81
testRunner.And("the course \'Course 2\' should have the following segment info", ((string)(null)), table16, "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table17.AddRow(new string[] {
                        "Name",
                        "Course 3"});
            table17.AddRow(new string[] {
                        "Code",
                        "TemplateCode1"});
            table17.AddRow(new string[] {
                        "Description",
                        "My First Course Template"});
            table17.AddRow(new string[] {
                        "CourseType",
                        "Traditional"});
            table17.AddRow(new string[] {
                        "IsTemplate",
                        "true"});
            table17.AddRow(new string[] {
                        "MetaData",
                        "{someData}"});
            table17.AddRow(new string[] {
                        "CorrelationId",
                        ""});
#line 84
testRunner.And("the course \'Course 3\' should have the following info", ((string)(null)), table17, "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table18.AddRow(new string[] {
                        "ExtensionAssets",
                        "asset1,asset2"});
#line 93
testRunner.And("the course \'Course 3\' should have the following reference info", ((string)(null)), table18, "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "SourceSegment"});
            table19.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        "Week1"});
#line 96
testRunner.And("the course \'Course 3\' should have the following segment info", ((string)(null)), table19, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Ignore course Type in the request when creating from template")]
        public virtual void IgnoreCourseTypeInTheRequestWhenCreatingFromTemplate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Ignore course Type in the request when creating from template", ((string[])(null)));
#line 100
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Code",
                        "Description",
                        "OrganizationName",
                        "IsTemplate"});
            table20.AddRow(new string[] {
                        "Course 2",
                        "CourseCode2",
                        "My First Course Template",
                        "COB",
                        "false"});
#line 101
testRunner.When("I create a course from the template \'Template 1\' with the following", ((string)(null)), table20, "When ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table21.AddRow(new string[] {
                        "Name",
                        "Course 2"});
            table21.AddRow(new string[] {
                        "Code",
                        "CourseCode2"});
            table21.AddRow(new string[] {
                        "Description",
                        "My First Course Template"});
            table21.AddRow(new string[] {
                        "CourseType",
                        "Traditional"});
            table21.AddRow(new string[] {
                        "IsTemplate",
                        "false"});
            table21.AddRow(new string[] {
                        "MetaData",
                        "{someData}"});
#line 104
testRunner.Then("the course \'Course 2\' should have the following info", ((string)(null)), table21, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table22.AddRow(new string[] {
                        "ExtensionAssets",
                        "asset1,asset2"});
#line 112
testRunner.And("the course \'Course 2\' should have the following reference info", ((string)(null)), table22, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify programs are copied from course template")]
        public virtual void VerifyProgramsAreCopiedFromCourseTemplate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify programs are copied from course template", ((string[])(null)));
#line 116
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Program Name"});
            table23.AddRow(new string[] {
                        "Bachelor of Art"});
            table23.AddRow(new string[] {
                        "Bachelor of Science"});
#line 117
testRunner.When("I associate \'Template 1\' course with the following programs", ((string)(null)), table23, "When ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Code",
                        "Description",
                        "OrganizationName",
                        "IsTemplate"});
            table24.AddRow(new string[] {
                        "Course 3",
                        "CourseCode3",
                        "My First Course from Template",
                        "COB",
                        "false"});
#line 121
testRunner.And("I create a course from the template \'Template 1\' with the following", ((string)(null)), table24, "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Program Name"});
            table25.AddRow(new string[] {
                        "Bachelor of Art"});
            table25.AddRow(new string[] {
                        "Bachelor of Science"});
#line 124
testRunner.Then("the course \'Course 3\' includes the following programs", ((string)(null)), table25, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify segments are copied from course template")]
        public virtual void VerifySegmentsAreCopiedFromCourseTemplate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify segments are copied from course template", ((string[])(null)));
#line 129
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Code",
                        "Description",
                        "OrganizationName",
                        "IsTemplate"});
            table26.AddRow(new string[] {
                        "Course 4",
                        "CourseCode4",
                        "My First Course from Template",
                        "COB",
                        "false"});
#line 130
testRunner.When("I create a course from the template \'Template 1\' with the following", ((string)(null)), table26, "When ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table27.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table27.AddRow(new string[] {
                        "Discussion",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1"});
            table27.AddRow(new string[] {
                        "Discussion2",
                        "Discussion2 for the first week",
                        "Discussion",
                        "Week1"});
            table27.AddRow(new string[] {
                        "Topic",
                        "Topic for a discussion",
                        "Topic",
                        "Discussion"});
#line 133
testRunner.Then("the course \'Course 4\' should have these course segments", ((string)(null)), table27, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify outcomes are copied from course template")]
        public virtual void VerifyOutcomesAreCopiedFromCourseTemplate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify outcomes are copied from course template", ((string[])(null)));
#line 140
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Description"});
            table28.AddRow(new string[] {
                        "Outcome1",
                        "first course learning outcome"});
            table28.AddRow(new string[] {
                        "Outcome2",
                        "second course learning outcome"});
#line 141
testRunner.When("I associate the newly created learning outcomes to \'Template 1\' course", ((string)(null)), table28, "When ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Code",
                        "Description",
                        "OrganizationName",
                        "IsTemplate"});
            table29.AddRow(new string[] {
                        "Course 5",
                        "CourseCode5",
                        "My First Course from Template",
                        "COB",
                        "false"});
#line 145
testRunner.And("I create a course from the template \'Template 1\' with the following", ((string)(null)), table29, "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Description"});
            table30.AddRow(new string[] {
                        "Outcome1",
                        "first course learning outcome"});
            table30.AddRow(new string[] {
                        "Outcome2",
                        "second course learning outcome"});
#line 148
testRunner.Then("the course \'Template 1\' should have the following learning outcomes", ((string)(null)), table30, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Publish a course version, created from a template")]
        public virtual void PublishACourseVersionCreatedFromATemplate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Publish a course version, created from a template", ((string[])(null)));
#line 153
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Program Name"});
            table31.AddRow(new string[] {
                        "Bachelor of Art"});
            table31.AddRow(new string[] {
                        "Bachelor of Science"});
#line 154
 testRunner.Given("I associate \'Template 1\' course with the following programs", ((string)(null)), table31, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Code",
                        "Description",
                        "OrganizationName",
                        "IsTemplate"});
            table32.AddRow(new string[] {
                        "English 1010",
                        "ENG101",
                        "Ranji\'s awesome English Class",
                        "COB",
                        "false"});
#line 158
 testRunner.And("I create a course from the template \'Template 1\' with the following", ((string)(null)), table32, "And ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Note"});
            table33.AddRow(new string[] {
                        "English 1010",
                        "Blah blah"});
#line 161
 testRunner.When("I publish the following courses", ((string)(null)), table33, "When ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table34.AddRow(new string[] {
                        "Name",
                        "English 1010"});
            table34.AddRow(new string[] {
                        "Code",
                        "ENG101"});
            table34.AddRow(new string[] {
                        "Description",
                        "Ranji\'s awesome English Class"});
            table34.AddRow(new string[] {
                        "CourseType",
                        "Traditional"});
            table34.AddRow(new string[] {
                        "VersionNumber",
                        "1.0.0.0"});
            table34.AddRow(new string[] {
                        "IsPublished",
                        "true"});
            table34.AddRow(new string[] {
                        "PublishNote",
                        "Blah blah"});
#line 164
 testRunner.Then("the course \'English 1010\' should have the following info", ((string)(null)), table34, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Program Name"});
            table35.AddRow(new string[] {
                        "Bachelor of Art"});
            table35.AddRow(new string[] {
                        "Bachelor of Science"});
#line 173
 testRunner.And("the course \'English 1010\' includes the following programs", ((string)(null)), table35, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Version a course, which was created from a template")]
        public virtual void VersionACourseWhichWasCreatedFromATemplate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Version a course, which was created from a template", ((string[])(null)));
#line 178
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Program Name"});
            table36.AddRow(new string[] {
                        "Bachelor of Art"});
            table36.AddRow(new string[] {
                        "Bachelor of Science"});
#line 179
 testRunner.Given("I associate \'Template 1\' course with the following programs", ((string)(null)), table36, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Code",
                        "Description",
                        "OrganizationName",
                        "IsTemplate"});
            table37.AddRow(new string[] {
                        "English 1010",
                        "ENG101",
                        "Ranji\'s awesome English Class",
                        "COB",
                        "false"});
#line 183
 testRunner.And("I create a course from the template \'Template 1\' with the following", ((string)(null)), table37, "And ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Note"});
            table38.AddRow(new string[] {
                        "English 1010",
                        "Blah blah"});
#line 186
 testRunner.When("I publish the following courses", ((string)(null)), table38, "When ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table39.AddRow(new string[] {
                        "VersionNumber",
                        "2.0a"});
#line 189
 testRunner.And("I create a new version of \'English 1010\' course named \'English 1010 v2\' with the " +
                    "following info", ((string)(null)), table39, "And ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table40.AddRow(new string[] {
                        "Name",
                        "English 1010"});
            table40.AddRow(new string[] {
                        "Code",
                        "ENG101"});
            table40.AddRow(new string[] {
                        "Description",
                        "Ranji\'s awesome English Class"});
            table40.AddRow(new string[] {
                        "CourseType",
                        "Traditional"});
            table40.AddRow(new string[] {
                        "IsPublished",
                        "false"});
            table40.AddRow(new string[] {
                        "VersionNumber",
                        "2.0a"});
#line 192
 testRunner.Then("the course \'English 1010 v2\' should have the following info", ((string)(null)), table40, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Program Name"});
            table41.AddRow(new string[] {
                        "Bachelor of Art"});
            table41.AddRow(new string[] {
                        "Bachelor of Science"});
#line 200
 testRunner.And("the course \'English 1010 v2\' includes the following programs", ((string)(null)), table41, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cannot get the template after create a course version from a previously-published" +
            " version（DE395）")]
        public virtual void CannotGetTheTemplateAfterCreateACourseVersionFromAPreviously_PublishedVersionDE395()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cannot get the template after create a course version from a previously-published" +
                    " version（DE395）", ((string[])(null)));
#line 205
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Code",
                        "Description",
                        "OrganizationName",
                        "IsTemplate"});
            table42.AddRow(new string[] {
                        "English 2020",
                        "CourseCode1",
                        "My First Course Template",
                        "COB",
                        "false"});
#line 206
 testRunner.When("I create a course from the template \'Template 1\' with the following", ((string)(null)), table42, "When ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Note"});
            table43.AddRow(new string[] {
                        "English 2020",
                        "Blah blah"});
#line 209
 testRunner.And("I publish the following courses", ((string)(null)), table43, "And ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table44.AddRow(new string[] {
                        "VersionNumber",
                        "1.0.0.1"});
#line 212
 testRunner.And("I create a new version of \'English 2020\' course named \'English 2020 v1.0.0.1\' wit" +
                    "h the following info", ((string)(null)), table44, "And ");
#line 215
 testRunner.Then("The course \'English 2020 v1.0.0.1\' should have the template named \'Template 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Verify programs and prerequisites should be maintained  when converting a course " +
            "to a template")]
        public virtual void VerifyProgramsAndPrerequisitesShouldBeMaintainedWhenConvertingACourseToATemplate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify programs and prerequisites should be maintained  when converting a course " +
                    "to a template", ((string[])(null)));
#line 217
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Code",
                        "Description",
                        "OrganizationName",
                        "CourseType",
                        "IsTemplate",
                        "MetaData",
                        "ExtensionAssets"});
            table45.AddRow(new string[] {
                        "Econ 100",
                        "E100",
                        "Macroeconomics",
                        "COB",
                        "Traditional",
                        "False",
                        "{someData}",
                        "asset1,asset2"});
            table45.AddRow(new string[] {
                        "Econ 400",
                        "E400",
                        "Advanced Econometrics",
                        "COB",
                        "Traditional",
                        "False",
                        "{someData}",
                        "asset1,asset2"});
#line 218
 testRunner.Given("I have the following courses", ((string)(null)), table45, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Note"});
            table46.AddRow(new string[] {
                        "Econ 100",
                        "a note"});
            table46.AddRow(new string[] {
                        "Econ 400",
                        "a note"});
#line 222
 testRunner.When("I publish the following courses", ((string)(null)), table46, "When ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Code",
                        "Description",
                        "Tenant Id",
                        "OrganizationName",
                        "CourseType",
                        "IsTemplate",
                        "MetaData",
                        "ExtensionAssets",
                        "ProgramName",
                        "Prerequisites"});
            table47.AddRow(new string[] {
                        "English 101",
                        "ENG101",
                        "Ranji\'s awesome English Class",
                        "999999",
                        "COB",
                        "Traditional",
                        "false",
                        "{someData}",
                        "B40CE4F4-434A-4987-80A8-58F795C212EB",
                        "Bachelor of Art",
                        "Econ 100,Econ 400"});
#line 226
 testRunner.And("I have an existing course with following info:", ((string)(null)), table47, "And ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Code",
                        "Description",
                        "Tenant Id",
                        "OrganizationName",
                        "CourseType",
                        "IsTemplate",
                        "MetaData",
                        "ExtensionAssets",
                        "ProgramName",
                        "Prerequisites"});
            table48.AddRow(new string[] {
                        "English 101",
                        "ENG101",
                        "Ranji\'s awesome English Class",
                        "999999",
                        "COB",
                        "Traditional",
                        "true",
                        "{someData}",
                        "B40CE4F4-434A-4987-80A8-58F795C212EB",
                        "Bachelor of Art",
                        "Econ 100,Econ 400"});
#line 229
 testRunner.And("I change the info to reflect the following:", ((string)(null)), table48, "And ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Note"});
            table49.AddRow(new string[] {
                        "English 101",
                        "a note"});
#line 232
 testRunner.And("I publish the following courses", ((string)(null)), table49, "And ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Program Name"});
            table50.AddRow(new string[] {
                        "Bachelor of Art"});
#line 235
 testRunner.Then("the course \'English 101\' includes the following program information", ((string)(null)), table50, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table51.AddRow(new string[] {
                        "Econ 100"});
            table51.AddRow(new string[] {
                        "Econ 400"});
#line 238
 testRunner.And("the course \'English 101\' should have the following prerequisites", ((string)(null)), table51, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
