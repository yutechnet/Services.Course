// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.33440
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BpeProducts.Services.Course.Host.Tests.Integration
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Course Learning Material")]
    [NUnit.Framework.CategoryAttribute("Api")]
    public partial class CourseLearningMaterialFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CourseLearningMaterial.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Course Learning Material", "", ProgrammingLanguage.CSharp, new string[] {
                        "Api"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table1.AddRow(new string[] {
                        "COB"});
#line 5
 testRunner.Given("the following organizations exist", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Capability"});
            table2.AddRow(new string[] {
                        "CourseCreate"});
            table2.AddRow(new string[] {
                        "CoursePublish"});
            table2.AddRow(new string[] {
                        "CourseView"});
#line 8
 testRunner.And("I have the following capabilities", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Code",
                        "Description",
                        "OrganizationName",
                        "CourseType",
                        "IsTemplate"});
            table3.AddRow(new string[] {
                        "Econ 100",
                        "E100",
                        "Macroeconomics",
                        "COB",
                        "Traditional",
                        "False"});
#line 13
 testRunner.And("I have the following courses", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table4.AddRow(new string[] {
                        "Week 1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table4.AddRow(new string[] {
                        "Week 2",
                        "Second week is slack time",
                        "TimeSpan",
                        ""});
#line 16
 testRunner.And("I have the following course segments for \'Econ 100\'", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table5.AddRow(new string[] {
                        "file1"});
            table5.AddRow(new string[] {
                        "file2"});
            table5.AddRow(new string[] {
                        "file3"});
#line 24
 testRunner.And("I have the following assets", ((string)(null)), table5, "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add course learning material")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void AddCourseLearningMaterial()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add course learning material", new string[] {
                        "Ignore"});
#line 31
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description"});
            table6.AddRow(new string[] {
                        "file1"});
            table6.AddRow(new string[] {
                        "file2"});
#line 32
 testRunner.When("I add the following assets as learning material to \'Discussion 1\' learning activi" +
                    "ty", ((string)(null)), table6, "When ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description"});
            table7.AddRow(new string[] {
                        "file1"});
            table7.AddRow(new string[] {
                        "file2"});
#line 36
 testRunner.Then("\'Discussion 1\' learning activity has the following learning material", ((string)(null)), table7, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Delete course learning material")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void DeleteCourseLearningMaterial()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Delete course learning material", new string[] {
                        "Ignore"});
#line 42
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description"});
            table8.AddRow(new string[] {
                        "file1"});
            table8.AddRow(new string[] {
                        "file2"});
            table8.AddRow(new string[] {
                        "file3"});
#line 43
 testRunner.When("I add the following assets as learning material to \'Discussion 1\' learning activi" +
                    "ty", ((string)(null)), table8, "When ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description"});
            table9.AddRow(new string[] {
                        "file2"});
#line 48
 testRunner.And("I delete the following learning meterial", ((string)(null)), table9, "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description"});
            table10.AddRow(new string[] {
                        "file1"});
            table10.AddRow(new string[] {
                        "file3"});
#line 51
 testRunner.Then("\'Discussion 1\' learning activity has the following learning material", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add course learning material to published course fails")]
        [NUnit.Framework.IgnoreAttribute()]
        public virtual void AddCourseLearningMaterialToPublishedCourseFails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add course learning material to published course fails", new string[] {
                        "Ignore"});
#line 56
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Note"});
            table11.AddRow(new string[] {
                        "Econ 100",
                        "Published"});
#line 57
 testRunner.When("I publish the following courses", ((string)(null)), table11, "When ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description"});
            table12.AddRow(new string[] {
                        "file1"});
            table12.AddRow(new string[] {
                        "file2"});
#line 60
 testRunner.And("I add the following assets as learning material to \'Discussion 1\' learning activi" +
                    "ty", ((string)(null)), table12, "And ");
#line 64
 testRunner.Then("I get \'Forbidden\' response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Publish course publishes library and associated assets")]
        public virtual void PublishCoursePublishesLibraryAndAssociatedAssets()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Publish course publishes library and associated assets", ((string[])(null)));
#line 66
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Update learning material with unpublished course and unpublished asset")]
        public virtual void UpdateLearningMaterialWithUnpublishedCourseAndUnpublishedAsset()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update learning material with unpublished course and unpublished asset", ((string[])(null)));
#line 67
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Update learning material with unpublished course and published asset")]
        public virtual void UpdateLearningMaterialWithUnpublishedCourseAndPublishedAsset()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update learning material with unpublished course and published asset", ((string[])(null)));
#line 68
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Update learning material with published course not allowed")]
        public virtual void UpdateLearningMaterialWithPublishedCourseNotAllowed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update learning material with published course not allowed", ((string[])(null)));
#line 69
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Update library item directly changes learning material")]
        public virtual void UpdateLibraryItemDirectlyChangesLearningMaterial()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update library item directly changes learning material", ((string[])(null)));
#line 70
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Update library item fails if library is published")]
        public virtual void UpdateLibraryItemFailsIfLibraryIsPublished()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update library item fails if library is published", ((string[])(null)));
#line 71
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create a learning material")]
        public virtual void CreateALearningMaterial()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create a learning material", ((string[])(null)));
#line 78
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Asset",
                        "CourseSegment",
                        "LearningMaterial",
                        "AdditionalInstruction",
                        "IsRequired"});
            table13.AddRow(new string[] {
                        "file1",
                        "Week 1",
                        "Material A",
                        "",
                        "false"});
#line 79
    testRunner.When("Create learning material as the following info", ((string)(null)), table13, "When ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table14.AddRow(new string[] {
                        "Asset",
                        "file1"});
            table14.AddRow(new string[] {
                        "CourseSegment",
                        "Week 1"});
            table14.AddRow(new string[] {
                        "AdditionalInstruction",
                        ""});
            table14.AddRow(new string[] {
                        "IsRequired",
                        "false"});
#line 82
 testRunner.Then("the learning material has the following info", ((string)(null)), table14, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create learning materials with same asset")]
        public virtual void CreateLearningMaterialsWithSameAsset()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create learning materials with same asset", ((string[])(null)));
#line 89
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Asset",
                        "CourseSegment",
                        "LearningMaterial",
                        "AdditionalInstruction",
                        "IsRequired"});
            table15.AddRow(new string[] {
                        "file2",
                        "Week 1",
                        "Material A",
                        "",
                        "false"});
            table15.AddRow(new string[] {
                        "file2",
                        "Week 2",
                        "Material B",
                        "",
                        "false"});
#line 90
    testRunner.When("Create learning material as the following info", ((string)(null)), table15, "When ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "LearningMaterial",
                        "Asset",
                        "CourseSegment",
                        "AdditionalInstruction",
                        "IsRequired"});
            table16.AddRow(new string[] {
                        "Material A",
                        "file2",
                        "Week 1",
                        "",
                        "false"});
            table16.AddRow(new string[] {
                        "Material B",
                        "file2",
                        "Week 2",
                        "",
                        "false"});
#line 94
 testRunner.Then("The following learning materials have the following info", ((string)(null)), table16, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Validate the learning materials only have one asset")]
        public virtual void ValidateTheLearningMaterialsOnlyHaveOneAsset()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validate the learning materials only have one asset", ((string[])(null)));
#line 99
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Asset",
                        "CourseSegment",
                        "LearningMaterial",
                        "AdditionalInstruction",
                        "IsRequired"});
            table17.AddRow(new string[] {
                        "file2",
                        "Week 1",
                        "Material A",
                        "",
                        "false"});
#line 100
    testRunner.When("Create learning material as the following info", ((string)(null)), table17, "When ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Asset",
                        "CourseSegment",
                        "LearningMaterial",
                        "AdditionalInstruction",
                        "IsRequired"});
            table18.AddRow(new string[] {
                        "file3",
                        "Week 1",
                        "Material A",
                        "",
                        "false"});
#line 103
 testRunner.And("Create learning material as the following info", ((string)(null)), table18, "And ");
#line 106
 testRunner.Then("I get \'BadRequest\' response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create a Section from the course with learning materials")]
        public virtual void CreateASectionFromTheCourseWithLearningMaterials()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create a Section from the course with learning materials", ((string[])(null)));
#line 108
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "PublishNote"});
            table19.AddRow(new string[] {
                        "file1",
                        "published"});
            table19.AddRow(new string[] {
                        "file2",
                        "published"});
#line 109
 testRunner.Given("Published the following assets", ((string)(null)), table19, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Asset",
                        "CourseSegment",
                        "LearningMaterial",
                        "AdditionalInstruction",
                        "IsRequired"});
            table20.AddRow(new string[] {
                        "file1",
                        "Week 1",
                        "Material A",
                        "",
                        "false"});
            table20.AddRow(new string[] {
                        "file2",
                        "Week 2",
                        "Material B",
                        "",
                        "false"});
#line 113
    testRunner.And("Create learning material as the following info", ((string)(null)), table20, "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "CourseName",
                        "Note"});
            table21.AddRow(new string[] {
                        "Econ 100",
                        "published"});
#line 117
 testRunner.And("Publish the following courses", ((string)(null)), table21, "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "CourseName",
                        "Name",
                        "Code",
                        "StartDate",
                        "EndDate"});
            table22.AddRow(new string[] {
                        "Econ 100",
                        "Econ 100 Section",
                        "Test Code",
                        "2/15/2014",
                        "6/15/2014"});
#line 120
 testRunner.When("Create section as following", ((string)(null)), table22, "When ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "LearningMaterial",
                        "Asset",
                        "CourseSegment",
                        "AdditionalInstruction",
                        "IsRequired"});
            table23.AddRow(new string[] {
                        "Material A",
                        "file2",
                        "Week 1",
                        "",
                        "false"});
            table23.AddRow(new string[] {
                        "Material B",
                        "file2",
                        "Week 2",
                        "",
                        "false"});
#line 123
 testRunner.Then("The section \'Econ 100 Section\' has following learning materials", ((string)(null)), table23, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create a course from a course template with learning materials")]
        public virtual void CreateACourseFromACourseTemplateWithLearningMaterials()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create a course from a course template with learning materials", ((string[])(null)));
#line 128
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Code",
                        "Description",
                        "Tenant Id",
                        "OrganizationName",
                        "CourseType",
                        "IsTemplate",
                        "Credit"});
            table24.AddRow(new string[] {
                        "English Template",
                        "Eng100",
                        "English Class Template",
                        "999999",
                        "COB",
                        "Traditional",
                        "true",
                        "5"});
#line 129
   testRunner.Given("I have the following course template", ((string)(null)), table24, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table25.AddRow(new string[] {
                        "Week one",
                        "First week",
                        "TimeSpan",
                        ""});
            table25.AddRow(new string[] {
                        "Week two",
                        "Second week",
                        "TimeSpan",
                        ""});
#line 132
    testRunner.And("I have the following course segments for \'English Template\'", ((string)(null)), table25, "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Asset",
                        "CourseSegment",
                        "LearningMaterial",
                        "AdditionalInstruction",
                        "IsRequired"});
            table26.AddRow(new string[] {
                        "file1",
                        "Week one",
                        "Template Material A",
                        "",
                        "false"});
            table26.AddRow(new string[] {
                        "file2",
                        "Week two",
                        "Template Material B",
                        "",
                        "false"});
#line 136
    testRunner.And("Create learning material as the following info", ((string)(null)), table26, "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Course Template",
                        "CourseName"});
            table27.AddRow(new string[] {
                        "English Template",
                        "English Course"});
#line 140
 testRunner.When("Create a course from course template as following", ((string)(null)), table27, "When ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "LearningMaterial",
                        "Asset",
                        "CourseSegment",
                        "AdditionalInstruction",
                        "IsRequired"});
            table28.AddRow(new string[] {
                        "Template Material A",
                        "file1",
                        "Week one",
                        "",
                        "false"});
            table28.AddRow(new string[] {
                        "Template Material B",
                        "file2",
                        "Week two",
                        "",
                        "false"});
#line 143
 testRunner.Then("The course \'English Course\' has following learning material", ((string)(null)), table28, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Publish course with learning materials then the associate assets need publish")]
        public virtual void PublishCourseWithLearningMaterialsThenTheAssociateAssetsNeedPublish()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Publish course with learning materials then the associate assets need publish", ((string[])(null)));
#line 148
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Asset",
                        "CourseSegment",
                        "LearningMaterial",
                        "AdditionalInstruction",
                        "IsRequired"});
            table29.AddRow(new string[] {
                        "file1",
                        "Week 1",
                        "Material A",
                        "",
                        "false"});
#line 149
    testRunner.Given("Create learning material as the following info", ((string)(null)), table29, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "CourseName",
                        "Note"});
            table30.AddRow(new string[] {
                        "Econ 100",
                        "published"});
#line 152
 testRunner.When("Publish the following courses", ((string)(null)), table30, "When ");
#line 155
 testRunner.Then("The asset \'file1\' is published", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Canot modify the asset after the course publishing")]
        public virtual void CanotModifyTheAssetAfterTheCoursePublishing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Canot modify the asset after the course publishing", ((string[])(null)));
#line 157
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Asset",
                        "CourseSegment",
                        "Name"});
            table31.AddRow(new string[] {
                        "file1",
                        "Week 1",
                        "Material A"});
#line 158
    testRunner.Given("Create learning material as following", ((string)(null)), table31, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "CourseName",
                        "Note"});
            table32.AddRow(new string[] {
                        "Econ 100",
                        "published"});
#line 161
 testRunner.And("Publish the following courses", ((string)(null)), table32, "And ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Description"});
            table33.AddRow(new string[] {
                        "change the description"});
#line 164
 testRunner.When("Modify asset \'file1\' as following info", ((string)(null)), table33, "When ");
#line 167
 testRunner.Then("I get \'BadRequest\' response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
