// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18052
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BpeProducts.Services.Course.Host.Tests.Integration
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CourseVersioning")]
    [NUnit.Framework.CategoryAttribute("Api")]
    public partial class CourseVersioningFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CourseVersioning.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CourseVersioning", "In order to allow continuous enhancement of course\r\nAs a course builder\r\nI want t" +
                    "o version the course", ProgrammingLanguage.CSharp, new string[] {
                        "Api"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table1.AddRow(new string[] {
                        "COB"});
#line 8
 testRunner.Given("the following organizations exist", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Capability"});
            table2.AddRow(new string[] {
                        "CourseCreate"});
            table2.AddRow(new string[] {
                        "CoursePublish"});
            table2.AddRow(new string[] {
                        "CourseView"});
            table2.AddRow(new string[] {
                        "EditCourse"});
#line 11
 testRunner.And("I have the following capabilities", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table3.AddRow(new string[] {
                        "asset1"});
            table3.AddRow(new string[] {
                        "asset2"});
            table3.AddRow(new string[] {
                        "asset3"});
#line 17
 testRunner.And("I have the following assets", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "PublishNote"});
            table4.AddRow(new string[] {
                        "asset1",
                        "published"});
            table4.AddRow(new string[] {
                        "asset2",
                        "published"});
            table4.AddRow(new string[] {
                        "asset3",
                        "published"});
#line 22
 testRunner.And("Published the following assets", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Code",
                        "Description",
                        "OrganizationName",
                        "CourseType",
                        "IsTemplate",
                        "MetaData",
                        "ExtensionAssets"});
            table5.AddRow(new string[] {
                        "English 1010",
                        "ENG101",
                        "Ranji\'s awesome English Class",
                        "COB",
                        "Traditional",
                        "false",
                        "{someData}",
                        "asset1,asset2"});
            table5.AddRow(new string[] {
                        "English 101011",
                        "E10011",
                        "Macroeconomics",
                        "COB",
                        "Traditional",
                        "false",
                        "{someData}",
                        "asset3"});
#line 27
 testRunner.And("I have the following courses", ((string)(null)), table5, "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create a default version")]
        public virtual void CreateADefaultVersion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create a default version", ((string[])(null)));
#line 32
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table6.AddRow(new string[] {
                        "Name",
                        "English 1010"});
            table6.AddRow(new string[] {
                        "Code",
                        "ENG101"});
            table6.AddRow(new string[] {
                        "Description",
                        "Ranji\'s awesome English Class"});
            table6.AddRow(new string[] {
                        "VersionNumber",
                        "1.0.0.0"});
            table6.AddRow(new string[] {
                        "MetaData",
                        "{someData}"});
#line 33
 testRunner.Then("the course \'English 1010\' should have the following info", ((string)(null)), table6, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table7.AddRow(new string[] {
                        "ExtensionAssets",
                        "asset1,asset2"});
#line 40
 testRunner.And("the course \'English 1010\' should have the following reference info", ((string)(null)), table7, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Edit a course version")]
        public virtual void EditACourseVersion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Edit a course version", ((string[])(null)));
#line 44
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "Name",
                        "English 10101"});
            table8.AddRow(new string[] {
                        "Code",
                        "ENG10101"});
            table8.AddRow(new string[] {
                        "Description",
                        "Ranji\'s terrible English Class"});
            table8.AddRow(new string[] {
                        "IsTemplate",
                        "true"});
            table8.AddRow(new string[] {
                        "MetaData",
                        "{updatedData}"});
            table8.AddRow(new string[] {
                        "ExtensionAssets",
                        "asset2"});
#line 45
 testRunner.When("I update \'English 1010\' course with the following info", ((string)(null)), table8, "When ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table9.AddRow(new string[] {
                        "Name",
                        "English 10101"});
            table9.AddRow(new string[] {
                        "Code",
                        "ENG10101"});
            table9.AddRow(new string[] {
                        "Description",
                        "Ranji\'s terrible English Class"});
            table9.AddRow(new string[] {
                        "VersionNumber",
                        "1.0.0.0"});
            table9.AddRow(new string[] {
                        "OrganizationName",
                        "COB"});
            table9.AddRow(new string[] {
                        "IsTemplate",
                        "true"});
            table9.AddRow(new string[] {
                        "MetaData",
                        "{updatedData}"});
#line 53
 testRunner.Then("the course \'English 1010\' should have the following info", ((string)(null)), table9, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table10.AddRow(new string[] {
                        "ExtensionAssets",
                        "asset2"});
#line 62
 testRunner.And("the course \'English 1010\' should have the following reference info", ((string)(null)), table10, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Publish a course version")]
        public virtual void PublishACourseVersion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Publish a course version", ((string[])(null)));
#line 66
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Note"});
            table11.AddRow(new string[] {
                        "English 1010",
                        "Blah blah"});
#line 67
 testRunner.When("I publish the following courses", ((string)(null)), table11, "When ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "Name",
                        "English 1010"});
            table12.AddRow(new string[] {
                        "Code",
                        "ENG101"});
            table12.AddRow(new string[] {
                        "Description",
                        "Ranji\'s awesome English Class"});
            table12.AddRow(new string[] {
                        "VersionNumber",
                        "1.0.0.0"});
            table12.AddRow(new string[] {
                        "IsPublished",
                        "true"});
            table12.AddRow(new string[] {
                        "PublishNote",
                        "Blah blah"});
            table12.AddRow(new string[] {
                        "MetaData",
                        "{someData}"});
#line 70
 testRunner.Then("the course \'English 1010\' should have the following info", ((string)(null)), table12, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table13.AddRow(new string[] {
                        "ExtensionAssets",
                        "asset1,asset2"});
#line 79
 testRunner.And("the course \'English 1010\' should have the following reference info", ((string)(null)), table13, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Published version cannot be modified")]
        public virtual void PublishedVersionCannotBeModified()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Published version cannot be modified", ((string[])(null)));
#line 83
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Note"});
            table14.AddRow(new string[] {
                        "English 1010",
                        "Blah blah"});
#line 84
 testRunner.When("I publish the following courses", ((string)(null)), table14, "When ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table15.AddRow(new string[] {
                        "Name",
                        "English 10101"});
            table15.AddRow(new string[] {
                        "Code",
                        "ENG101"});
            table15.AddRow(new string[] {
                        "Description",
                        "Johns\'s terrible English Class"});
            table15.AddRow(new string[] {
                        "OrganizationId",
                        "E2DF063D-E2A1-4F83-9BE0-218EC676C05F"});
            table15.AddRow(new string[] {
                        "MetaData",
                        "{updatedData}"});
            table15.AddRow(new string[] {
                        "ExtensionAssets",
                        "asset2"});
#line 87
 testRunner.And("I update \'English 1010\' course with the following info", ((string)(null)), table15, "And ");
#line 95
 testRunner.Then("I get \'BadRequest\' response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Published version cannot be deleted")]
        public virtual void PublishedVersionCannotBeDeleted()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Published version cannot be deleted", ((string[])(null)));
#line 97
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Note"});
            table16.AddRow(new string[] {
                        "English 1010",
                        "Blah blah"});
#line 98
 testRunner.When("I publish the following courses", ((string)(null)), table16, "When ");
#line 101
 testRunner.And("I delete \'English 1010\' course", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
 testRunner.Then("I get \'BadRequest\' response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create a course version from a previously-published version")]
        public virtual void CreateACourseVersionFromAPreviously_PublishedVersion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create a course version from a previously-published version", ((string[])(null)));
#line 104
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Note"});
            table17.AddRow(new string[] {
                        "English 1010",
                        "Blah blah"});
#line 105
 testRunner.When("I publish the following courses", ((string)(null)), table17, "When ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table18.AddRow(new string[] {
                        "VersionNumber",
                        "2.0a"});
#line 108
 testRunner.And("I create a new version of \'English 1010\' course named \'English 1010 v2\' with the " +
                    "following info", ((string)(null)), table18, "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table19.AddRow(new string[] {
                        "Name",
                        "English 1010"});
            table19.AddRow(new string[] {
                        "Code",
                        "ENG101"});
            table19.AddRow(new string[] {
                        "Description",
                        "Ranji\'s awesome English Class"});
            table19.AddRow(new string[] {
                        "VersionNumber",
                        "2.0a"});
            table19.AddRow(new string[] {
                        "IsPublished",
                        "false"});
            table19.AddRow(new string[] {
                        "MetaData",
                        "{someData}"});
#line 111
 testRunner.Then("the course \'English 1010 v2\' should have the following info", ((string)(null)), table19, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table20.AddRow(new string[] {
                        "ExtensionAssets",
                        "asset1,asset2"});
#line 119
 testRunner.And("the course \'English 1010 v2\' should have the following reference info", ((string)(null)), table20, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create a course version from a previously-published version then publish it")]
        public virtual void CreateACourseVersionFromAPreviously_PublishedVersionThenPublishIt()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create a course version from a previously-published version then publish it", ((string[])(null)));
#line 124
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Note"});
            table21.AddRow(new string[] {
                        "English 1010",
                        "Blah blah"});
#line 125
 testRunner.When("I publish the following courses", ((string)(null)), table21, "When ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table22.AddRow(new string[] {
                        "VersionNumber",
                        "1.0.0.1"});
#line 128
 testRunner.And("I create a new version of \'English 1010\' course named \'English 1010 v1.0.0.1\' wit" +
                    "h the following info", ((string)(null)), table22, "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Note"});
            table23.AddRow(new string[] {
                        "English 1010 v1.0.0.1",
                        "Blah blah DE396"});
#line 131
 testRunner.And("I publish the following courses", ((string)(null)), table23, "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table24.AddRow(new string[] {
                        "Name",
                        "English 1010"});
            table24.AddRow(new string[] {
                        "Code",
                        "ENG101"});
            table24.AddRow(new string[] {
                        "Description",
                        "Ranji\'s awesome English Class"});
            table24.AddRow(new string[] {
                        "VersionNumber",
                        "1.0.0.1"});
            table24.AddRow(new string[] {
                        "IsPublished",
                        "true"});
            table24.AddRow(new string[] {
                        "MetaData",
                        "{someData}"});
#line 134
 testRunner.Then("the course \'English 1010 v1.0.0.1\' should have the following info", ((string)(null)), table24, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table25.AddRow(new string[] {
                        "ExtensionAssets",
                        "asset1,asset2"});
#line 142
 testRunner.And("the course \'English 1010 v1.0.0.1\' should have the following reference info", ((string)(null)), table25, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create a course version from a previously-published version with prerequisites")]
        public virtual void CreateACourseVersionFromAPreviously_PublishedVersionWithPrerequisites()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create a course version from a previously-published version with prerequisites", ((string[])(null)));
#line 146
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Note"});
            table26.AddRow(new string[] {
                        "English 101011",
                        "Blah blah"});
#line 147
 testRunner.When("I publish the following courses", ((string)(null)), table26, "When ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table27.AddRow(new string[] {
                        "English 101011"});
#line 150
 testRunner.And("I add the following prerequisites to \'English 1010\'", ((string)(null)), table27, "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Note"});
            table28.AddRow(new string[] {
                        "English 1010",
                        "Blah blah"});
#line 153
 testRunner.And("I publish the following courses", ((string)(null)), table28, "And ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table29.AddRow(new string[] {
                        "VersionNumber",
                        "2.0a"});
#line 156
 testRunner.And("I create a new version of \'English 1010\' course named \'English 1010 v2\' with the " +
                    "following info", ((string)(null)), table29, "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table30.AddRow(new string[] {
                        "Name",
                        "English 1010"});
            table30.AddRow(new string[] {
                        "Code",
                        "ENG101"});
            table30.AddRow(new string[] {
                        "Description",
                        "Ranji\'s awesome English Class"});
            table30.AddRow(new string[] {
                        "VersionNumber",
                        "2.0a"});
            table30.AddRow(new string[] {
                        "IsPublished",
                        "false"});
            table30.AddRow(new string[] {
                        "MetaData",
                        "{someData}"});
#line 159
 testRunner.Then("the course \'English 1010 v2\' should have the following info", ((string)(null)), table30, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table31.AddRow(new string[] {
                        "ExtensionAssets",
                        "asset1,asset2"});
#line 167
 testRunner.And("the course \'English 1010 v2\' should have the following reference info", ((string)(null)), table31, "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table32.AddRow(new string[] {
                        "English 101011"});
#line 170
 testRunner.And("the course \'English 1010 v2\' should have the following prerequisites", ((string)(null)), table32, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create a course version from a previously-published version with segments")]
        public virtual void CreateACourseVersionFromAPreviously_PublishedVersionWithSegments()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create a course version from a previously-published version with segments", ((string[])(null)));
#line 174
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table33.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table33.AddRow(new string[] {
                        "Discussion",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1"});
            table33.AddRow(new string[] {
                        "Discussion2",
                        "Discussion2 for the first week",
                        "Discussion",
                        "Week1"});
            table33.AddRow(new string[] {
                        "Topic",
                        "Topic for a discussion",
                        "Topic",
                        "Discussion"});
#line 175
 testRunner.Given("I have the following course segments for \'English 1010\'", ((string)(null)), table33, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Note"});
            table34.AddRow(new string[] {
                        "English 1010",
                        "Blah blah"});
#line 181
 testRunner.When("I publish the following courses", ((string)(null)), table34, "When ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table35.AddRow(new string[] {
                        "VersionNumber",
                        "2.0a"});
#line 184
 testRunner.And("I create a new version of \'English 1010\' course named \'English 1010 v2\' with the " +
                    "following info", ((string)(null)), table35, "And ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table36.AddRow(new string[] {
                        "Name",
                        "English 1010"});
            table36.AddRow(new string[] {
                        "Code",
                        "ENG101"});
            table36.AddRow(new string[] {
                        "Description",
                        "Ranji\'s awesome English Class"});
            table36.AddRow(new string[] {
                        "VersionNumber",
                        "2.0a"});
            table36.AddRow(new string[] {
                        "IsPublished",
                        "false"});
            table36.AddRow(new string[] {
                        "MetaData",
                        "{someData}"});
#line 187
 testRunner.Then("the course \'English 1010 v2\' should have the following info", ((string)(null)), table36, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table37.AddRow(new string[] {
                        "ExtensionAssets",
                        "asset1,asset2"});
#line 195
 testRunner.And("the course \'English 1010 v2\' should have the following reference info", ((string)(null)), table37, "And ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table38.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table38.AddRow(new string[] {
                        "Discussion",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1"});
            table38.AddRow(new string[] {
                        "Discussion2",
                        "Discussion2 for the first week",
                        "Discussion",
                        "Week1"});
            table38.AddRow(new string[] {
                        "Topic",
                        "Topic for a discussion",
                        "Topic",
                        "Discussion"});
#line 198
 testRunner.And("the course \'English 1010 v2\' should have these course segments", ((string)(null)), table38, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create a course version from a previously-published version with segments and lea" +
            "rning activities")]
        public virtual void CreateACourseVersionFromAPreviously_PublishedVersionWithSegmentsAndLearningActivities()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create a course version from a previously-published version with segments and lea" +
                    "rning activities", ((string[])(null)));
#line 205
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Instructions",
                        "AssessmentType",
                        "IsPublished",
                        "VersionNumber"});
            table39.AddRow(new string[] {
                        "Assessment1",
                        "Do this",
                        "Essay",
                        "true",
                        "1.1"});
#line 206
 testRunner.Given("I have the following assessments", ((string)(null)), table39, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table40.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table40.AddRow(new string[] {
                        "Discussion",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1"});
            table40.AddRow(new string[] {
                        "Discussion2",
                        "Discussion2 for the first week",
                        "Discussion",
                        "Week1"});
            table40.AddRow(new string[] {
                        "Topic",
                        "Topic for a discussion",
                        "Topic",
                        "Discussion"});
#line 209
 testRunner.And("I have the following course segments for \'English 1010\'", ((string)(null)), table40, "And ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Type",
                        "IsGradeable",
                        "IsExtraCredit",
                        "Weight",
                        "MaxPoint",
                        "ObjectId",
                        "Assessment"});
            table41.AddRow(new string[] {
                        "Discussion 1",
                        "Discussion",
                        "True",
                        "true",
                        "100",
                        "20",
                        "D2DF063D-E2A1-4F83-9BE0-218EC676C05F",
                        "Assessment1"});
#line 215
 testRunner.And("I add the following course learning activities to \'Week1\' course segment", ((string)(null)), table41, "And ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Note"});
            table42.AddRow(new string[] {
                        "English 1010",
                        "Blah blah"});
#line 218
 testRunner.When("I publish the following courses", ((string)(null)), table42, "When ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table43.AddRow(new string[] {
                        "VersionNumber",
                        "2.0a"});
#line 221
 testRunner.And("I create a new version of \'English 1010\' course named \'English 1010 v2\' with the " +
                    "following info", ((string)(null)), table43, "And ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table44.AddRow(new string[] {
                        "Name",
                        "English 1010"});
            table44.AddRow(new string[] {
                        "Code",
                        "ENG101"});
            table44.AddRow(new string[] {
                        "Description",
                        "Ranji\'s awesome English Class"});
            table44.AddRow(new string[] {
                        "VersionNumber",
                        "2.0a"});
            table44.AddRow(new string[] {
                        "IsPublished",
                        "false"});
            table44.AddRow(new string[] {
                        "MetaData",
                        "{someData}"});
#line 224
 testRunner.Then("the course \'English 1010 v2\' should have the following info", ((string)(null)), table44, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table45.AddRow(new string[] {
                        "ExtensionAssets",
                        "asset1,asset2"});
#line 232
 testRunner.And("the course \'English 1010 v2\' should have the following reference info", ((string)(null)), table45, "And ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table46.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table46.AddRow(new string[] {
                        "Discussion",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1"});
            table46.AddRow(new string[] {
                        "Discussion2",
                        "Discussion2 for the first week",
                        "Discussion",
                        "Week1"});
            table46.AddRow(new string[] {
                        "Topic",
                        "Topic for a discussion",
                        "Topic",
                        "Discussion"});
#line 235
 testRunner.And("the course \'English 1010 v2\' should have these course segments", ((string)(null)), table46, "And ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table47.AddRow(new string[] {
                        "Name",
                        "Discussion 1"});
            table47.AddRow(new string[] {
                        "Type",
                        "Discussion"});
            table47.AddRow(new string[] {
                        "IsGradeable",
                        "true"});
            table47.AddRow(new string[] {
                        "IsExtraCredit",
                        "true"});
            table47.AddRow(new string[] {
                        "Weight",
                        "100"});
            table47.AddRow(new string[] {
                        "MaxPoint",
                        "20"});
            table47.AddRow(new string[] {
                        "ObjectId",
                        "D2DF063D-E2A1-4F83-9BE0-218EC676C05F"});
            table47.AddRow(new string[] {
                        "Assessment",
                        "Assessment1"});
            table47.AddRow(new string[] {
                        "AssessmentType",
                        "Essay"});
#line 241
 testRunner.And("my course learning activity \'Discussion 1\' contains the following", ((string)(null)), table47, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cannot publish the same version twice")]
        public virtual void CannotPublishTheSameVersionTwice()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cannot publish the same version twice", ((string[])(null)));
#line 253
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Note"});
            table48.AddRow(new string[] {
                        "English 1010",
                        "Blah blah"});
#line 254
 testRunner.When("I publish the following courses", ((string)(null)), table48, "When ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table49.AddRow(new string[] {
                        "VersionNumber",
                        "1.0.0.0"});
#line 257
 testRunner.And("I create a new version of \'English 1010\' course named \'English 1010 v2\' with the " +
                    "following info", ((string)(null)), table49, "And ");
#line 260
 testRunner.Then("I get \'BadRequest\' response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Cannot publish without a version")]
        public virtual void CannotPublishWithoutAVersion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cannot publish without a version", ((string[])(null)));
#line 262
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 263
 testRunner.When("I create a course without a version", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 264
 testRunner.Then("I get \'BadRequest\' response", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Search for published course")]
        public virtual void SearchForPublishedCourse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search for published course", ((string[])(null)));
#line 266
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table50.AddRow(new string[] {
                        "English 1010"});
            table50.AddRow(new string[] {
                        "English 101011"});
#line 267
 testRunner.Given("the user has permission to access these courses:", ((string)(null)), table50, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Note"});
            table51.AddRow(new string[] {
                        "English 1010",
                        "Blah blah"});
#line 271
 testRunner.When("I publish the following courses", ((string)(null)), table51, "When ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table52.AddRow(new string[] {
                        "English 1010"});
#line 274
 testRunner.Then("published courses for orgniazation \'COB\' contains the following courses", ((string)(null)), table52, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table53.AddRow(new string[] {
                        "English 101011"});
#line 277
 testRunner.And("published courses for orgniazation \'COB\' does not contain the following courses", ((string)(null)), table53, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
