// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18034
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BpeProducts.Services.Course.Host.Tests.Integration
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CourseSegment")]
    [NUnit.Framework.CategoryAttribute("Api")]
    public partial class CourseSegmentFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CourseSegment.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CourseSegment", "In order to structure my course\r\nAs a curriculum coordinator\r\nI want to add segme" +
                    "nts to the course", ProgrammingLanguage.CSharp, new string[] {
                        "Api"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Code",
                        "Description",
                        "OrganizationId"});
            table1.AddRow(new string[] {
                        "Math 101",
                        "M101",
                        "Basic mathematics",
                        "E2DF063D-E2A1-4F83-9BE0-218EC676C05F"});
#line 8
 testRunner.Given("the following courses exist:", ((string)(null)), table1, "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add course segment")]
        public virtual void AddCourseSegment()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add course segment", ((string[])(null)));
#line 12
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table2.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table2.AddRow(new string[] {
                        "Week2",
                        "Second week is more slack time",
                        "TimeSpan",
                        ""});
#line 13
 testRunner.When("I add following course segments to \'Math 101\':", ((string)(null)), table2, "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table3.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table3.AddRow(new string[] {
                        "Week2",
                        "Second week is more slack time",
                        "TimeSpan",
                        ""});
#line 17
 testRunner.Then("the course \'Math 101\' should have these course segments:", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add a nested course segment")]
        public virtual void AddANestedCourseSegment()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add a nested course segment", ((string[])(null)));
#line 22
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table4.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table4.AddRow(new string[] {
                        "Discussion",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1"});
            table4.AddRow(new string[] {
                        "Discussion2",
                        "Discussion2 for the first week",
                        "Discussion",
                        "Week1"});
            table4.AddRow(new string[] {
                        "Topic",
                        "Topic for a discussion",
                        "Topic",
                        "Discussion"});
#line 23
 testRunner.When("I add following course segments to \'Math 101\':", ((string)(null)), table4, "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table5.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table5.AddRow(new string[] {
                        "Discussion",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1"});
            table5.AddRow(new string[] {
                        "Discussion2",
                        "Discussion2 for the first week",
                        "Discussion",
                        "Week1"});
            table5.AddRow(new string[] {
                        "Topic",
                        "Topic for a discussion",
                        "Topic",
                        "Discussion"});
#line 29
 testRunner.Then("the course \'Math 101\' should have these course segments:", ((string)(null)), table5, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Update the course segment info without affecting the segment tree")]
        public virtual void UpdateTheCourseSegmentInfoWithoutAffectingTheSegmentTree()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update the course segment info without affecting the segment tree", ((string[])(null)));
#line 36
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table6.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table6.AddRow(new string[] {
                        "Discussion",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1"});
            table6.AddRow(new string[] {
                        "Topic",
                        "Topic for a discussion",
                        "Topic",
                        "Discussion"});
#line 37
 testRunner.When("I add following course segments to \'Math 101\':", ((string)(null)), table6, "When ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type"});
            table7.AddRow(new string[] {
                        "Discussion",
                        "Discussion is important",
                        "Discussion"});
            table7.AddRow(new string[] {
                        "Topic",
                        "New Topic for a discussion",
                        "Topic"});
#line 42
 testRunner.And("I update the course segments as following:", ((string)(null)), table7, "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table8.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table8.AddRow(new string[] {
                        "Discussion",
                        "Discussion is important",
                        "Discussion",
                        "Week1"});
            table8.AddRow(new string[] {
                        "Topic",
                        "New Topic for a discussion",
                        "Topic",
                        "Discussion"});
#line 46
 testRunner.Then("the course \'Math 101\' should have these course segments:", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Retrieve the course segment tree from anywhere in the structure")]
        public virtual void RetrieveTheCourseSegmentTreeFromAnywhereInTheStructure()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Retrieve the course segment tree from anywhere in the structure", ((string[])(null)));
#line 52
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table9.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table9.AddRow(new string[] {
                        "Discussion",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1"});
            table9.AddRow(new string[] {
                        "Discussion2",
                        "Discussion2 for the first week",
                        "Discussion",
                        "Week1"});
            table9.AddRow(new string[] {
                        "Topic",
                        "Topic for a discussion",
                        "Topic",
                        "Discussion"});
#line 53
 testRunner.When("I add following course segments to \'Math 101\':", ((string)(null)), table9, "When ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type"});
            table10.AddRow(new string[] {
                        "Topic",
                        "Topic for a discussion",
                        "Topic"});
#line 59
 testRunner.Then("the course segment \'Discussion\' should have these children segments:", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add multiple content to a segment")]
        public virtual void AddMultipleContentToASegment()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add multiple content to a segment", ((string[])(null)));
#line 63
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table11.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table11.AddRow(new string[] {
                        "Discussion",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1"});
#line 64
 testRunner.When("I add following course segments to \'Math 101\':", ((string)(null)), table11, "When ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Type"});
            table12.AddRow(new string[] {
                        "10257797-ab74-4796-a2f7-4722f8f96abe",
                        "Discussion"});
            table12.AddRow(new string[] {
                        "806f8cc4-ed16-4a1b-b8f2-1df373b7631a",
                        "Assignment"});
#line 68
 testRunner.And("I add the following content to \'Discussion\' segment", ((string)(null)), table12, "And ");
#line 72
 testRunner.Then("the course segment \'Discussion\' should have this content", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
