// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18063
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BpeProducts.Services.Course.Host.Tests.Integration
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CourseSegment")]
    [NUnit.Framework.CategoryAttribute("Api")]
    public partial class CourseSegmentFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CourseSegment.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CourseSegment", "In order to structure my course\r\nAs a curriculum coordinator\r\nI want to add segme" +
                    "nts to the course", ProgrammingLanguage.CSharp, new string[] {
                        "Api"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Capability"});
            table1.AddRow(new string[] {
                        "CourseCreate"});
            table1.AddRow(new string[] {
                        "CoursePublish"});
            table1.AddRow(new string[] {
                        "CourseView"});
#line 8
 testRunner.Given("I have the following capabilities", ((string)(null)), table1, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table2.AddRow(new string[] {
                        "COB"});
#line 13
  testRunner.And("the following organizations exist", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table3.AddRow(new string[] {
                        "asset1"});
            table3.AddRow(new string[] {
                        "asset2"});
#line 16
 testRunner.And("I have the following assets", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "PublishNote"});
            table4.AddRow(new string[] {
                        "asset1",
                        "published"});
            table4.AddRow(new string[] {
                        "asset2",
                        "published"});
#line 20
 testRunner.And("Published the following assets", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Code",
                        "Description",
                        "OrganizationName",
                        "MetaData",
                        "ExtensionAssets"});
            table5.AddRow(new string[] {
                        "Math 101",
                        "M101",
                        "Basic mathematics",
                        "COB",
                        "{someData}",
                        "asset1,asset2"});
#line 24
 testRunner.And("I have the following courses", ((string)(null)), table5, "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add course segment")]
        public virtual void AddCourseSegment()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add course segment", ((string[])(null)));
#line 28
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table6.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table6.AddRow(new string[] {
                        "Week2",
                        "Second week is more slack time",
                        "TimeSpan",
                        ""});
#line 29
 testRunner.Given("I have the following course segments for \'Math 101\'", ((string)(null)), table6, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table7.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table7.AddRow(new string[] {
                        "Week2",
                        "Second week is more slack time",
                        "TimeSpan",
                        ""});
#line 33
 testRunner.Then("the course \'Math 101\' should have these course segments", ((string)(null)), table7, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add a course segment with acitve, inactive")]
        public virtual void AddACourseSegmentWithAcitveInactive()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add a course segment with acitve, inactive", ((string[])(null)));
#line 38
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment",
                        "ActiveDate",
                        "InactiveDate"});
            table8.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        "",
                        "15",
                        "30"});
#line 39
 testRunner.Given("I have the following course segments for \'Math 101\'", ((string)(null)), table8, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment",
                        "ActiveDate",
                        "InactiveDate"});
            table9.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        "",
                        "15",
                        "30"});
#line 42
 testRunner.Then("the course \'Math 101\' should have these course segments", ((string)(null)), table9, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add a nested course segment")]
        public virtual void AddANestedCourseSegment()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add a nested course segment", ((string[])(null)));
#line 47
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table10.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table10.AddRow(new string[] {
                        "Discussion",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1"});
            table10.AddRow(new string[] {
                        "Discussion2",
                        "Discussion2 for the first week",
                        "Discussion",
                        "Week1"});
            table10.AddRow(new string[] {
                        "Topic",
                        "Topic for a discussion",
                        "Topic",
                        "Discussion"});
#line 48
 testRunner.Given("I have the following course segments for \'Math 101\'", ((string)(null)), table10, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table11.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table11.AddRow(new string[] {
                        "Discussion",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1"});
            table11.AddRow(new string[] {
                        "Discussion2",
                        "Discussion2 for the first week",
                        "Discussion",
                        "Week1"});
            table11.AddRow(new string[] {
                        "Topic",
                        "Topic for a discussion",
                        "Topic",
                        "Discussion"});
#line 54
 testRunner.Then("the course \'Math 101\' should have these course segments", ((string)(null)), table11, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Update the course segment info without affecting the segment tree")]
        public virtual void UpdateTheCourseSegmentInfoWithoutAffectingTheSegmentTree()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update the course segment info without affecting the segment tree", ((string[])(null)));
#line 61
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table12.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table12.AddRow(new string[] {
                        "Discussion",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1"});
            table12.AddRow(new string[] {
                        "Topic",
                        "Topic for a discussion",
                        "Topic",
                        "Discussion"});
#line 62
 testRunner.Given("I have the following course segments for \'Math 101\'", ((string)(null)), table12, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type"});
            table13.AddRow(new string[] {
                        "Discussion",
                        "Discussion is important",
                        "Discussion"});
            table13.AddRow(new string[] {
                        "Topic",
                        "New Topic for a discussion",
                        "Topic"});
#line 67
 testRunner.When("I update the course segments as follows", ((string)(null)), table13, "When ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table14.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table14.AddRow(new string[] {
                        "Discussion",
                        "Discussion is important",
                        "Discussion",
                        "Week1"});
            table14.AddRow(new string[] {
                        "Topic",
                        "New Topic for a discussion",
                        "Topic",
                        "Discussion"});
#line 71
 testRunner.Then("the course \'Math 101\' should have these course segments", ((string)(null)), table14, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Delete the course segment")]
        public virtual void DeleteTheCourseSegment()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Delete the course segment", ((string[])(null)));
#line 77
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table15.AddRow(new string[] {
                        "Segment1",
                        "Segment 1",
                        "TimeSpan",
                        ""});
            table15.AddRow(new string[] {
                        "Segment2",
                        "Segment 2",
                        "Discussion",
                        "Segment1"});
            table15.AddRow(new string[] {
                        "Segment3",
                        "Segment 3",
                        "Topic",
                        "Segment2"});
            table15.AddRow(new string[] {
                        "Segment4",
                        "Segment 4",
                        "Topic",
                        "Segment1"});
            table15.AddRow(new string[] {
                        "Segment5",
                        "Segment 5",
                        "Topic",
                        "Segment1"});
#line 78
 testRunner.Given("I have the following course segments for \'Math 101\'", ((string)(null)), table15, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table16.AddRow(new string[] {
                        "Segment2"});
            table16.AddRow(new string[] {
                        "Segment4"});
#line 85
 testRunner.When("I delete the following segments", ((string)(null)), table16, "When ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table17.AddRow(new string[] {
                        "Segment1",
                        "Segment 1",
                        "TimeSpan",
                        ""});
            table17.AddRow(new string[] {
                        "Segment5",
                        "Segment 5",
                        "Topic",
                        "Segment1"});
#line 89
 testRunner.Then("the course \'Math 101\' should have these course segments", ((string)(null)), table17, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table18.AddRow(new string[] {
                        "Segment6",
                        "Segment 1",
                        "TimeSpan",
                        "Segment1"});
            table18.AddRow(new string[] {
                        "Segment7",
                        "Segment 2",
                        "Discussion",
                        "Segment5"});
#line 93
 testRunner.Given("I have the following course segments for \'Math 101\'", ((string)(null)), table18, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table19.AddRow(new string[] {
                        "Segment1",
                        "Segment 1",
                        "TimeSpan",
                        ""});
            table19.AddRow(new string[] {
                        "Segment5",
                        "Segment 5",
                        "Topic",
                        "Segment1"});
            table19.AddRow(new string[] {
                        "Segment6",
                        "Segment 1",
                        "TimeSpan",
                        "Segment1"});
            table19.AddRow(new string[] {
                        "Segment7",
                        "Segment 2",
                        "Discussion",
                        "Segment5"});
#line 97
 testRunner.Then("the course \'Math 101\' should have these course segments", ((string)(null)), table19, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Retrieve the course segment tree from anywhere in the structure")]
        public virtual void RetrieveTheCourseSegmentTreeFromAnywhereInTheStructure()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Retrieve the course segment tree from anywhere in the structure", ((string[])(null)));
#line 104
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table20.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table20.AddRow(new string[] {
                        "Discussion",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1"});
            table20.AddRow(new string[] {
                        "Discussion2",
                        "Discussion2 for the first week",
                        "Discussion",
                        "Week1"});
            table20.AddRow(new string[] {
                        "Topic",
                        "Topic for a discussion",
                        "Topic",
                        "Discussion"});
#line 105
 testRunner.Given("I have the following course segments for \'Math 101\'", ((string)(null)), table20, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type"});
            table21.AddRow(new string[] {
                        "Topic",
                        "Topic for a discussion",
                        "Topic"});
#line 111
 testRunner.Then("the course segment \'Discussion\' should have these children segments", ((string)(null)), table21, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add another parent segment to a course")]
        public virtual void AddAnotherParentSegmentToACourse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add another parent segment to a course", ((string[])(null)));
#line 115
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table22.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table22.AddRow(new string[] {
                        "Discussion",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1"});
            table22.AddRow(new string[] {
                        "Week2",
                        "second week",
                        "Topic",
                        ""});
#line 116
 testRunner.Given("I have the following course segments for \'Math 101\'", ((string)(null)), table22, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table23.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table23.AddRow(new string[] {
                        "Discussion",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1"});
            table23.AddRow(new string[] {
                        "Week2",
                        "second week",
                        "Topic",
                        ""});
#line 121
 testRunner.Then("the course \'Math 101\' should have these course segments", ((string)(null)), table23, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check segment tree is loaded")]
        public virtual void CheckSegmentTreeIsLoaded()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check segment tree is loaded", ((string[])(null)));
#line 127
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table24.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table24.AddRow(new string[] {
                        "Week2",
                        "second week",
                        "Topic",
                        ""});
            table24.AddRow(new string[] {
                        "Discussion1",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1"});
            table24.AddRow(new string[] {
                        "Discussion2",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1"});
            table24.AddRow(new string[] {
                        "Discussion1.1",
                        "Sub Discussion for the first week",
                        "Discussion",
                        "Discussion1"});
            table24.AddRow(new string[] {
                        "Discussion1.2",
                        "Sub Discussion for the first week",
                        "Discussion",
                        "Discussion1"});
            table24.AddRow(new string[] {
                        "Discussion2.1",
                        "Sub Discussion for the first week",
                        "Discussion",
                        "Discussion2"});
            table24.AddRow(new string[] {
                        "Discussion2.2",
                        "Sub Discussion for the first week",
                        "Discussion",
                        "Discussion2"});
            table24.AddRow(new string[] {
                        "Discussion2.1.1",
                        "Sub Discussion for the first week",
                        "Discussion",
                        "Discussion2.1"});
            table24.AddRow(new string[] {
                        "Discussion2.2.1",
                        "Sub Discussion for the first week",
                        "Discussion",
                        "Discussion2.2"});
#line 128
 testRunner.Given("I have the following course segments for \'Math 101\'", ((string)(null)), table24, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table25.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table25.AddRow(new string[] {
                        "Week2",
                        "second week",
                        "Topic",
                        ""});
            table25.AddRow(new string[] {
                        "Discussion1",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1"});
            table25.AddRow(new string[] {
                        "Discussion2",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1"});
            table25.AddRow(new string[] {
                        "Discussion1.1",
                        "Sub Discussion for the first week",
                        "Discussion",
                        "Discussion1"});
            table25.AddRow(new string[] {
                        "Discussion1.2",
                        "Sub Discussion for the first week",
                        "Discussion",
                        "Discussion1"});
            table25.AddRow(new string[] {
                        "Discussion2.1",
                        "Sub Discussion for the first week",
                        "Discussion",
                        "Discussion2"});
            table25.AddRow(new string[] {
                        "Discussion2.2",
                        "Sub Discussion for the first week",
                        "Discussion",
                        "Discussion2"});
            table25.AddRow(new string[] {
                        "Discussion2.1.1",
                        "Sub Discussion for the first week",
                        "Discussion",
                        "Discussion2.1"});
            table25.AddRow(new string[] {
                        "Discussion2.2.1",
                        "Sub Discussion for the first week",
                        "Discussion",
                        "Discussion2.2"});
#line 140
 testRunner.Then("the course \'Math 101\' should have these course segments", ((string)(null)), table25, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Ensure Course Segment display order is persisted on Save")]
        public virtual void EnsureCourseSegmentDisplayOrderIsPersistedOnSave()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Ensure Course Segment display order is persisted on Save", ((string[])(null)));
#line 153
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment",
                        "DisplayOrder"});
            table26.AddRow(new string[] {
                        "Week2",
                        "second week",
                        "Topic",
                        "",
                        "1"});
            table26.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        "",
                        "0"});
            table26.AddRow(new string[] {
                        "Discussion2",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1",
                        "3"});
            table26.AddRow(new string[] {
                        "Discussion1",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1",
                        "2"});
            table26.AddRow(new string[] {
                        "Discussion1.1",
                        "Sub Discussion for the first week",
                        "Discussion",
                        "Discussion1",
                        "4"});
            table26.AddRow(new string[] {
                        "Discussion1.2",
                        "Sub Discussion for the first week",
                        "Discussion",
                        "Discussion1",
                        "5"});
#line 154
 testRunner.Given("I have the following course segments for \'Math 101\'", ((string)(null)), table26, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "DisplayOrder"});
            table27.AddRow(new string[] {
                        "Week1",
                        "0"});
            table27.AddRow(new string[] {
                        "Week2",
                        "1"});
            table27.AddRow(new string[] {
                        "Discussion1",
                        "2"});
            table27.AddRow(new string[] {
                        "Discussion2",
                        "3"});
            table27.AddRow(new string[] {
                        "Discussion1.1",
                        "4"});
            table27.AddRow(new string[] {
                        "Discussion1.2",
                        "5"});
#line 162
 testRunner.Then("The course \'Math 101\' segments retrieved match the display order entered", ((string)(null)), table27, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Ensure Course Segment display order is persisted on Update")]
        public virtual void EnsureCourseSegmentDisplayOrderIsPersistedOnUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Ensure Course Segment display order is persisted on Update", ((string[])(null)));
#line 171
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment",
                        "DisplayOrder"});
            table28.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        "",
                        "0"});
            table28.AddRow(new string[] {
                        "Week2",
                        "second week",
                        "Topic",
                        "",
                        "1"});
            table28.AddRow(new string[] {
                        "Discussion1",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1",
                        "2"});
            table28.AddRow(new string[] {
                        "Discussion2",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1",
                        "3"});
            table28.AddRow(new string[] {
                        "Discussion1.1",
                        "Sub Discussion for the first week",
                        "Discussion",
                        "Discussion1",
                        "4"});
            table28.AddRow(new string[] {
                        "Discussion1.2",
                        "Sub Discussion for the first week",
                        "Discussion",
                        "Discussion1",
                        "5"});
#line 172
 testRunner.Given("I have the following course segments for \'Math 101\'", ((string)(null)), table28, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment",
                        "DisplayOrder"});
            table29.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        "",
                        "5"});
            table29.AddRow(new string[] {
                        "Week2",
                        "second week",
                        "Topic",
                        "",
                        "4"});
            table29.AddRow(new string[] {
                        "Discussion1",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1",
                        "3"});
            table29.AddRow(new string[] {
                        "Discussion2",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1",
                        "2"});
            table29.AddRow(new string[] {
                        "Discussion1.1",
                        "Sub Discussion for the first week",
                        "Discussion",
                        "Discussion1",
                        "1"});
            table29.AddRow(new string[] {
                        "Discussion1.2",
                        "Sub Discussion for the first week",
                        "Discussion",
                        "Discussion1",
                        "0"});
#line 180
 testRunner.When("I update the course segments as follows", ((string)(null)), table29, "When ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "DisplayOrder"});
            table30.AddRow(new string[] {
                        "Week1",
                        "5"});
            table30.AddRow(new string[] {
                        "Week2",
                        "4"});
            table30.AddRow(new string[] {
                        "Discussion1",
                        "3"});
            table30.AddRow(new string[] {
                        "Discussion2",
                        "2"});
            table30.AddRow(new string[] {
                        "Discussion1.1",
                        "1"});
            table30.AddRow(new string[] {
                        "Discussion1.2",
                        "0"});
#line 188
 testRunner.Then("The course \'Math 101\' segments retrieved match the display order entered", ((string)(null)), table30, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Bulk update reorder validation")]
        public virtual void BulkUpdateReorderValidation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bulk update reorder validation", ((string[])(null)));
#line 197
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table31.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table31.AddRow(new string[] {
                        "Discussion",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1"});
            table31.AddRow(new string[] {
                        "Discussion2",
                        "Discussion2 for the first week",
                        "Discussion",
                        "Week1"});
            table31.AddRow(new string[] {
                        "Topic",
                        "Topic for a discussion",
                        "Topic",
                        "Discussion"});
            table31.AddRow(new string[] {
                        "Week2",
                        "Second week is where work begins",
                        "TimeSpan",
                        ""});
            table31.AddRow(new string[] {
                        "Discussion3",
                        "Discussion for week 2",
                        "Discussion",
                        "Week2"});
#line 198
 testRunner.Given("I have the following course segments for \'Math 101\'", ((string)(null)), table31, "Given ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table32.AddRow(new string[] {
                        "Week2",
                        "Second week is where work begins",
                        "TimeSpan",
                        ""});
            table32.AddRow(new string[] {
                        "Discussion3",
                        "Discussion for week 2",
                        "Discussion",
                        "Week2"});
            table32.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table32.AddRow(new string[] {
                        "Discussion2",
                        "Discussion2 for the first week",
                        "Discussion",
                        "Week1"});
            table32.AddRow(new string[] {
                        "Discussion",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1"});
            table32.AddRow(new string[] {
                        "Topic",
                        "Topic for a discussion",
                        "Topic",
                        "Discussion"});
#line 206
 testRunner.When("I perform a bulk update for \'Math 101\' with the following order", ((string)(null)), table32, "When ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Description",
                        "Type",
                        "ParentSegment"});
            table33.AddRow(new string[] {
                        "Week2",
                        "Second week is where work begins",
                        "TimeSpan",
                        ""});
            table33.AddRow(new string[] {
                        "Discussion3",
                        "Discussion for week 2",
                        "Discussion",
                        "Week2"});
            table33.AddRow(new string[] {
                        "Week1",
                        "First week is slack time",
                        "TimeSpan",
                        ""});
            table33.AddRow(new string[] {
                        "Discussion2",
                        "Discussion2 for the first week",
                        "Discussion",
                        "Week1"});
            table33.AddRow(new string[] {
                        "Discussion",
                        "Discussion for the first week",
                        "Discussion",
                        "Week1"});
            table33.AddRow(new string[] {
                        "Topic",
                        "Topic for a discussion",
                        "Topic",
                        "Discussion"});
#line 214
 testRunner.Then("the course \'Math 101\' should have these course segments in the following order", ((string)(null)), table33, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
